#
#   pcre-windows-default.nmake -- Makefile to build PCRE Library for windows
#

PRODUCT           = pcre
VERSION           = 1.0.0
BUILD_NUMBER      = 0
PROFILE           = default
PA                = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH              = x64
ENTRY             = _DllMainCRTStartup
!ELSE
ARCH              = x86
ENTRY             = _DllMainCRTStartup@12
!ENDIF

OS                = windows
CONFIG            = $(OS)-$(ARCH)-$(PROFILE)
LBIN              = $(CONFIG)\bin

ifeq ($(BIT_PACK_LIB),1)
    BIT_PACK_COMPILER := 1
endif
ifeq ($(BIT_PACK_RC),1)
    BIT_PACK_WINSDK := 1
endif

CC                = cl
LD                = link
RC                = rc
CFLAGS            = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS            = -D_REENTRANT -D_MT -DBIT_FEATURE_PCRE=1 -DBIT_DEBUG 
IFLAGS            = -I$(CONFIG)\inc
LDFLAGS           = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS          = -libpath:$(CONFIG)\bin
LIBS              = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX   = C:
BIT_BASE_PREFIX   = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX    = $(BIT_BASE_PREFIX)\PCRE Library
BIT_VAPP_PREFIX   = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX   = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX  = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX    = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX    = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX    = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX    = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX    = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX    = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX    = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX  = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX  = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX    = $(BIT_VAPP_PREFIX)\src


TARGETS            = $(TARGETS) $(CONFIG)\bin\libpcre.dll

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\pcre-windows-default-bit.h $(CONFIG)\inc\bit.h

clean:
	if exist "$(CONFIG)\bin\libpcre.dll" rd /Q /S"$(CONFIG)\bin\libpcre.dll"
	if exist "$(CONFIG)\obj\pcre_chartables.obj" rd /Q /S"$(CONFIG)\obj\pcre_chartables.obj"
	if exist "$(CONFIG)\obj\pcre_compile.obj" rd /Q /S"$(CONFIG)\obj\pcre_compile.obj"
	if exist "$(CONFIG)\obj\pcre_exec.obj" rd /Q /S"$(CONFIG)\obj\pcre_exec.obj"
	if exist "$(CONFIG)\obj\pcre_globals.obj" rd /Q /S"$(CONFIG)\obj\pcre_globals.obj"
	if exist "$(CONFIG)\obj\pcre_newline.obj" rd /Q /S"$(CONFIG)\obj\pcre_newline.obj"
	if exist "$(CONFIG)\obj\pcre_ord2utf8.obj" rd /Q /S"$(CONFIG)\obj\pcre_ord2utf8.obj"
	if exist "$(CONFIG)\obj\pcre_tables.obj" rd /Q /S"$(CONFIG)\obj\pcre_tables.obj"
	if exist "$(CONFIG)\obj\pcre_try_flipped.obj" rd /Q /S"$(CONFIG)\obj\pcre_try_flipped.obj"
	if exist "$(CONFIG)\obj\pcre_ucp_searchfuncs.obj" rd /Q /S"$(CONFIG)\obj\pcre_ucp_searchfuncs.obj"
	if exist "$(CONFIG)\obj\pcre_valid_utf8.obj" rd /Q /S"$(CONFIG)\obj\pcre_valid_utf8.obj"
	if exist "$(CONFIG)\obj\pcre_xclass.obj" rd /Q /S"$(CONFIG)\obj\pcre_xclass.obj"



#
#   version
#
version: $(DEPS_1)
	@echo NN 1.0.0-0

#
#   config.h
#
$(CONFIG)\inc\config.h: $(DEPS_2)
	@echo '      [Copy] $(CONFIG)/inc/config.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\config.h" "$(CONFIG)\inc\config.h"

#
#   pcre.h
#
$(CONFIG)\inc\pcre.h: $(DEPS_3)
	@echo '      [Copy] $(CONFIG)/inc/pcre.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\pcre.h" "$(CONFIG)\inc\pcre.h"

#
#   pcre_internal.h
#
$(CONFIG)\inc\pcre_internal.h: $(DEPS_4)
	@echo '      [Copy] $(CONFIG)/inc/pcre_internal.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\pcre_internal.h" "$(CONFIG)\inc\pcre_internal.h"

#
#   bit.h
#
$(CONFIG)\inc\bit.h: $(DEPS_5)
	@echo '      [Copy] $(CONFIG)/inc/bit.h'

#
#   ucp.h
#
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\bit.h

$(CONFIG)\inc\ucp.h: $(DEPS_6)
	@echo '      [Copy] $(CONFIG)/inc/ucp.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\ucp.h" "$(CONFIG)\inc\ucp.h"

#
#   ucpinternal.h
#
$(CONFIG)\inc\ucpinternal.h: $(DEPS_7)
	@echo '      [Copy] $(CONFIG)/inc/ucpinternal.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\ucpinternal.h" "$(CONFIG)\inc\ucpinternal.h"

#
#   ucptable.h
#
$(CONFIG)\inc\ucptable.h: $(DEPS_8)
	@echo '      [Copy] $(CONFIG)/inc/ucptable.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\ucptable.h" "$(CONFIG)\inc\ucptable.h"

#
#   pcre_chartables.obj
#
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\bit.h
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\config.h
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\pcre_internal.h
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\pcre.h
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\ucp.h

$(CONFIG)\obj\pcre_chartables.obj: \
    src\pcre_chartables.c $(DEPS_9)
	@echo '   [Compile] src/pcre_chartables.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_chartables.obj -Fd$(CONFIG)\obj\pcre_chartables.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_chartables.c

#
#   pcre_compile.obj
#
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\bit.h
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\config.h
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_compile.obj: \
    src\pcre_compile.c $(DEPS_10)
	@echo '   [Compile] src/pcre_compile.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_compile.obj -Fd$(CONFIG)\obj\pcre_compile.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_compile.c

#
#   pcre_exec.obj
#
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\bit.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\config.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_exec.obj: \
    src\pcre_exec.c $(DEPS_11)
	@echo '   [Compile] src/pcre_exec.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_exec.obj -Fd$(CONFIG)\obj\pcre_exec.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_exec.c

#
#   pcre_globals.obj
#
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\bit.h
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\config.h
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_globals.obj: \
    src\pcre_globals.c $(DEPS_12)
	@echo '   [Compile] src/pcre_globals.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_globals.obj -Fd$(CONFIG)\obj\pcre_globals.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_globals.c

#
#   pcre_newline.obj
#
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\bit.h
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\config.h
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_newline.obj: \
    src\pcre_newline.c $(DEPS_13)
	@echo '   [Compile] src/pcre_newline.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_newline.obj -Fd$(CONFIG)\obj\pcre_newline.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_newline.c

#
#   pcre_ord2utf8.obj
#
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\bit.h
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\config.h
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_ord2utf8.obj: \
    src\pcre_ord2utf8.c $(DEPS_14)
	@echo '   [Compile] src/pcre_ord2utf8.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_ord2utf8.obj -Fd$(CONFIG)\obj\pcre_ord2utf8.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_ord2utf8.c

#
#   pcre_tables.obj
#
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\bit.h
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\config.h
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_tables.obj: \
    src\pcre_tables.c $(DEPS_15)
	@echo '   [Compile] src/pcre_tables.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_tables.obj -Fd$(CONFIG)\obj\pcre_tables.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_tables.c

#
#   pcre_try_flipped.obj
#
DEPS_16 = $(DEPS_16) $(CONFIG)\inc\bit.h
DEPS_16 = $(DEPS_16) $(CONFIG)\inc\config.h
DEPS_16 = $(DEPS_16) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_try_flipped.obj: \
    src\pcre_try_flipped.c $(DEPS_16)
	@echo '   [Compile] src/pcre_try_flipped.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_try_flipped.obj -Fd$(CONFIG)\obj\pcre_try_flipped.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_try_flipped.c

#
#   pcre_ucp_searchfuncs.obj
#
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\bit.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\config.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_ucp_searchfuncs.obj: \
    src\pcre_ucp_searchfuncs.c $(DEPS_17)
	@echo '   [Compile] src/pcre_ucp_searchfuncs.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_ucp_searchfuncs.obj -Fd$(CONFIG)\obj\pcre_ucp_searchfuncs.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_ucp_searchfuncs.c

#
#   pcre_valid_utf8.obj
#
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\bit.h
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\config.h
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_valid_utf8.obj: \
    src\pcre_valid_utf8.c $(DEPS_18)
	@echo '   [Compile] src/pcre_valid_utf8.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_valid_utf8.obj -Fd$(CONFIG)\obj\pcre_valid_utf8.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_valid_utf8.c

#
#   pcre_xclass.obj
#
DEPS_19 = $(DEPS_19) $(CONFIG)\inc\bit.h
DEPS_19 = $(DEPS_19) $(CONFIG)\inc\config.h
DEPS_19 = $(DEPS_19) $(CONFIG)\inc\pcre_internal.h

$(CONFIG)\obj\pcre_xclass.obj: \
    src\pcre_xclass.c $(DEPS_19)
	@echo '   [Compile] src/pcre_xclass.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre_xclass.obj -Fd$(CONFIG)\obj\pcre_xclass.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre_xclass.c

#
#   libpcre
#
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\config.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\pcre.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\pcre_internal.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\ucp.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\ucpinternal.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\ucptable.h
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_chartables.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_compile.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_exec.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_globals.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_newline.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_ord2utf8.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_tables.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_try_flipped.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_ucp_searchfuncs.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_valid_utf8.obj
DEPS_20 = $(DEPS_20) $(CONFIG)\obj\pcre_xclass.obj

$(CONFIG)\bin\libpcre.dll: $(DEPS_20)
	@echo '      [Link] libpcre'
	"$(LD)" -dll -out:$(CONFIG)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\pcre_chartables.obj $(CONFIG)\obj\pcre_compile.obj $(CONFIG)\obj\pcre_exec.obj $(CONFIG)\obj\pcre_globals.obj $(CONFIG)\obj\pcre_newline.obj $(CONFIG)\obj\pcre_ord2utf8.obj $(CONFIG)\obj\pcre_tables.obj $(CONFIG)\obj\pcre_try_flipped.obj $(CONFIG)\obj\pcre_ucp_searchfuncs.obj $(CONFIG)\obj\pcre_valid_utf8.obj $(CONFIG)\obj\pcre_xclass.obj $(LIBS) 

#
#   stop
#
stop: $(DEPS_21)
#  Omit build script stop

#
#   installBinary
#
DEPS_22 = $(DEPS_22) stop

installBinary: $(DEPS_22)

#
#   start
#
start: $(DEPS_23)
#  Omit build script start

#
#   install
#
DEPS_24 = $(DEPS_24) stop
DEPS_24 = $(DEPS_24) installBinary
DEPS_24 = $(DEPS_24) start

install: $(DEPS_24)


#
#   uninstall
#
DEPS_25 = $(DEPS_25) stop

uninstall: $(DEPS_25)

